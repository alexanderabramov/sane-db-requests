buildscript {
    ext {
        kotlinVersion = '1.3.30'
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-spring'

apply plugin: 'idea'

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.test'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext['jUnitVersion'] = '5.4.1'

dependencies {
    ext {
        jaxbGlassfishVersion = '2.3.2'
        mockitoVersion = '2.27.0'
        mockitoKotlinVersion = '1.6.0'
        testContainersVersion = '1.11.2'
    }

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation "org.springframework:spring-core"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtime "org.glassfish.jaxb:jaxb-runtime:$jaxbGlassfishVersion"

    runtime 'org.postgresql:postgresql'

    // Test
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"

    testImplementation "org.junit.jupiter:junit-jupiter-api"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    testImplementation "org.testcontainers:postgresql:$testContainersVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
        mavenBom "org.junit:junit-bom:$jUnitVersion"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict", "-Xjvm-default=enable"]
        jvmTarget = '1.8'
    }
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }
}

bootRun {
    sourceResources sourceSets.main
    systemProperty 'file.encoding', 'UTF-8'
}
